{"version":3,"sources":["components/Header/style.module.css","components/Loading/styles.module.css","components/Content/style.module.css","components/Header/index.js","components/Content/CardContent.js","components/Loading/index.js","components/Content/index.js","utils/helper.js","components/Footer/index.js","App.js","serviceWorker.js","index.js","components/Footer/styles.module.css"],"names":["module","exports","HeaderApp","Title","Typography","className","styles","main","level","style","margin","CardContent","status","total","Text","wrapperCard","left","toUpperCase","right","src","verticalAlign","size","Loading","spinner","ContentApp","Option","Select","useState","data","setData","country","setCountry","selectCountry","setSelectCountry","loading","setLoading","layout","col","xs","sm","row","useEffect","a","axios","get","res","getCountry","initArray","map","item","push","attributes","Country_Region","obj","find","fetchData","title","select","labelCol","span","wrapperCol","Item","label","width","value","showSearch","onChange","index","key","mainContent","cardContent","gutter","Confirmed","Recovered","Deaths","loadingComponent","timestamp","date","Date","hari","getDay","tanggal","getDate","bulan","tahun","getFullYear","jam","getHours","menit","getMinutes","detik","getSeconds","convertDate","Last_Update","href","textDecoration","color","FooterApp","text","type","JSON","stringify","image","App","Header","Layout","Content","Footer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9975d527.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__2hgKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__1KiMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__33528\",\"title\":\"style_title__3uBLJ\",\"mainContent\":\"style_mainContent__11qhv\",\"wrapperCard\":\"style_wrapperCard__3YLdO\",\"left\":\"style_left__2hnlu\",\"right\":\"style_right__3Nosh\",\"select\":\"style_select__2a5Cd\",\"cardContent\":\"style_cardContent__3rl_P\",\"loadingComponent\":\"style_loadingComponent__4WFDf\"};","import React from 'react'\r\nimport { Typography } from 'antd'\r\nimport styles from './style.module.css'\r\n\r\nconst HeaderApp = () => {\r\n  const { Title } = Typography\r\n  return (\r\n    <div className={styles.main}>\r\n      <Title level={2} style={{ margin: 0 }}>Pantau Corona</Title>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default HeaderApp","import React from 'react'\r\nimport { Card, Avatar, Typography } from 'antd'\r\nimport styles from './style.module.css'\r\n\r\nconst CardContent = ({ status, total }) => {\r\n  const { Title, Text } = Typography\r\n  const positif = 'https://image.flaticon.com/icons/svg/1742/1742427.svg'\r\n  const sembuh = 'https://image.flaticon.com/icons/svg/1742/1742340.svg'\r\n  const meninggal = 'https://image.flaticon.com/icons/svg/1742/1742348.svg'\r\n  return (\r\n    <>\r\n      <Card>\r\n        <div className={styles.wrapperCard}>\r\n          <div className={styles.left}>\r\n            <Text>TOTAL {status.toUpperCase()}</Text>\r\n            <Title style={{ margin: 0 }} level={3}>{total}</Title>\r\n            <Text>ORANG</Text>\r\n          </div>\r\n          <div className={styles.right}>\r\n            <Avatar\r\n              src={\r\n                status === \"positif\" ? positif\r\n                  : status === \"sembuh\" ? sembuh\r\n                    : status === \"meninggal\" ? meninggal\r\n                      : ''\r\n              }\r\n              style={{ verticalAlign: 'middle' }}\r\n              size={64}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardContent","import React from \"react\";\r\nimport styles from './styles.module.css'\r\n\r\n\r\nconst Loading = () => {\r\n\r\n    return (<div className={styles.spinner}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>)\r\n}\r\n\r\nexport default Loading\r\n","import React, { useEffect, useState } from 'react'\r\nimport CardContent from './CardContent'\r\nimport Loading from '../Loading'\r\nimport { convertDate } from '../../utils/helper'\r\nimport { Typography, Select, Form, Row, Col } from 'antd'\r\nimport axios from 'axios'\r\nimport styles from './style.module.css'\r\n\r\nconst ContentApp = () => {\r\n  const { Title, Text } = Typography\r\n  const { Option } = Select\r\n  const [data, setData] = useState({})\r\n  const [country, setCountry] = useState([])\r\n  const [selectCountry, setSelectCountry] = useState(\"Indonesia\")\r\n  const [loading, setLoading] = useState(false)\r\n  const layout = {\r\n    col: {\r\n      xs: 24,\r\n      sm: 8\r\n    },\r\n    row: [8, 8]\r\n\r\n  }\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 2 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 2 },\r\n      sm: { span: 20 },\r\n    },\r\n  }\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      const res = await axios.get('https://api.kawalcorona.com/')\r\n      const getCountry = async res => {\r\n        const initArray = []\r\n        await res.map(item => {\r\n          initArray.push(item.attributes.Country_Region)\r\n          return true\r\n        })\r\n        setCountry(initArray)\r\n      }\r\n      let obj = res.data.find(item => item.attributes.Country_Region === selectCountry); //SEARCH BY SELECT\r\n      setData(obj)\r\n      getCountry(res.data)\r\n      setLoading(false)\r\n    }\r\n    fetchData()\r\n  }, [selectCountry])\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.title}>\r\n        <Title style={{ margin: 0 }}>PANTAU CORONA</Title>\r\n        <Text>Update Live Data Global COVID-19</Text>\r\n      </div>\r\n      <div className={styles.select}>\r\n        <Form {...formItemLayout}>\r\n          <Form.Item label=\"Pilih Negara\">\r\n            <Select\r\n              style={{ width: 200 }}\r\n              data={country}\r\n              value={loading ? 'Loading...' : selectCountry}\r\n              showSearch\r\n              onChange={value => setSelectCountry(value)}\r\n            >\r\n              {country.map((item, index) => {\r\n                return (\r\n                  <Option value={item} key={index}>{item}</Option>\r\n                )\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      <div className={styles.mainContent}>\r\n        <div className={styles.cardContent}>\r\n          {\r\n            data ?\r\n              data.attributes && !loading ?\r\n                <>\r\n                  <Row gutter={layout.row}>\r\n                    <Col {...layout.col}>\r\n                      <CardContent status=\"positif\" total={data.attributes.Confirmed} />\r\n                    </Col>\r\n                    <Col {...layout.col}>\r\n                      <CardContent status=\"sembuh\" total={data.attributes.Recovered} />\r\n                    </Col>\r\n                    <Col {...layout.col}>\r\n                      <CardContent status=\"meninggal\" total={data.attributes.Deaths} />\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n                :\r\n                <div className={styles.loadingComponent}>\r\n                  <Loading />\r\n                </div>\r\n              :\r\n              <div className={styles.loadingComponent}>\r\n                <Loading />\r\n              </div>\r\n          }\r\n        </div>\r\n        <Text style={{ margin: '10px 0px' }}>\r\n          Update Terakhir :\r\n          {\r\n            data ?\r\n              data.attributes && !loading ? `${convertDate(data.attributes.Last_Update)} WIB` : \"\"\r\n              : \" Something Error\"\r\n          }\r\n        </Text>\r\n        <Text> Sumber :\r\n          <a href=\"https://kawalcorona.com/\" style={{ textDecoration: \"none\", color: \"white\" }}> https://kawalcorona.com/</a>\r\n        </Text>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContentApp","export function convertDate(timestamp) {\r\n    const hariArray = [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jum'at\", 'Sabtu']\r\n    const bulanArray = [\"Januari\", \"Febuari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"]\r\n    let date = new Date(timestamp);\r\n    const hari = hariArray[date.getDay()]\r\n    const tanggal = date.getDate()\r\n    const bulan = bulanArray[date.getDay()]\r\n    const tahun = date.getFullYear()\r\n    const jam = date.getHours()\r\n    const menit = date.getMinutes()\r\n    const detik = date.getSeconds()\r\n    return `${hari}, ${tanggal} ${bulan} ${tahun}, ${jam}:${menit}:${detik}`\r\n}","import React from 'react'\r\nimport { Typography } from 'antd'\r\nimport styles from './styles.module.css'\r\n\r\nconst FooterApp = () => {\r\n    const { Text } = Typography\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.text}>\r\n                <Text type=\"secondary\">Created With ♥ from {JSON.stringify({})} to Indonesia</Text>\r\n            </div>\r\n            <div className={styles.image} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterApp","import React from 'react'\nimport { Layout, Row, Col } from 'antd'\nimport HeaderApp from './components/Header'\nimport ContentApp from './components/Content'\nimport FooterApp from './components/Footer'\nimport './App.css'\n\nconst App = () => {\n  const { Header, Content, Footer } = Layout\n  const layout = {\n    xs: 24,\n    sm: 24\n  }\n  return (\n    <>\n      <Row>\n        <Col {...layout}>\n          <Header>\n            <HeaderApp />\n          </Header>\n        </Col>\n        <Col {...layout}>\n          <Content className=\"content\">\n            <ContentApp />\n          </Content>\n        </Col>\n        <Col {...layout}>\n          <Footer className=\"footer\">\n            <FooterApp />\n          </Footer>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__K1j4t\",\"text\":\"styles_text__38me8\",\"image\":\"styles_image__12xOE\"};"],"sourceRoot":""}